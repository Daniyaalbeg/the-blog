---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { HomeHeader } from '../components/HomeHeader';
import TailwindIndicator from '../components/TailwindIndicator.astro';
import DarkMode from '../layouts/DarkMode.astro';
import '@fontsource/sora';
---

<!-- Trying data attributes to do this animation -->

<!DOCTYPE html>
<html lang="en" class="h-full max-w-7xl mx-auto">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<link
			rel="preload"
			href="/fonts/BiroScriptReduced.otf"
			as="font"
			type="font/otf"
			crossorigin
		/>
		<link
			rel="preload"
			href="/fonts/BiroScriptBoldReduced.otf"
			as="font"
			type="font/otf"
			crossorigin
		/>
	</head>
	<!-- bg-gradient-to-b from-slate-200 to-slate-300 dark:from-stone-500 dark:to-stone-600 -->
	<body class="h-full bg-stone-300 dark:bg-stone-800  transition-all ease-in-out duration-300">
		<div class="fixed top-0 left-0 right-0 bottom-0 bg-stone-800/90 pointer-events-none opacity-0 transition-opacity duration-500 ease-in-out" id="background-cover" />
		<div class="w-full h-20">
			<HomeHeader client:only />
		</div>
		<main class="relative h-[calc(100%-9rem)] w-full grid items-center justify-center" style={{ perspective: "2000px" }}>
			<!-- w-[calc(100%-4rem)] -->
			<section style={{
				transition: "transform 0.1s ease-out",
				transform: `rotateX(var(--x)) rotateY(var(--y))`,
				perspective: "150px",
			}} class="absolute group mx-auto bg-paper bg-center bg-contain bg-yellow-800/50 bg-blend-luminosity rounded-3xl space-y-2 mt-4 overflow-hidden" date-state="card">
				<!-- <img src="/me.jpg" alt="My face" class="mx-auto rounded-full" /> -->
				<div 
					style={{
						transition: "transform, opacity 0.2s ease-out",
						transform: `translateX(var(--hX)) translateY(var(--hY))`,
					}} 
					id="card-reflection"
					class="h-96 w-96 bg-stone-200/20 blur-3xl group-hover:opacity-100 transition-opacity opacity-0 pointer-events-none rounded-full top-0 left-0 absolute"
					date-state="card"
				/>
				<button 
					style={{
						transition: "transform 1s ease-out",
						transform: `rotateX(var(--x)) rotateY(var(--y))`,
					}} 
					class="relative w-full h-full flex flex-col space-y-8 items-center justify-center"
					date-state="card"
				>
					<!-- <svg width="100" height="100" class="text-stone-700 pointer-events-none group-hover:scale-110 transition-transform duration-1000" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path d="M1 2C0.447715 2 0 2.44772 0 3V12C0 12.5523 0.447715 13 1 13H14C14.5523 13 15 12.5523 15 12V3C15 2.44772 14.5523 2 14 2H1ZM1 3L14 3V3.92494C13.9174 3.92486 13.8338 3.94751 13.7589 3.99505L7.5 7.96703L1.24112 3.99505C1.16621 3.94751 1.0826 3.92486 1 3.92494V3ZM1 4.90797V12H14V4.90797L7.74112 8.87995C7.59394 8.97335 7.40606 8.97335 7.25888 8.87995L1 4.90797Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd" />
					</svg> -->
					<p class="text-stone-700 pointer-events-none font-biro text-5xl">Open</p>
				</button>

				<div class="w-full h-full p-24 font-biro" id="about-text">
					<div class="relative rounded-full w-32 h-32 bg-paper mx-auto">
						<img src="/me.jpg" class="absolute top-0 right-0 left-0 bottom-0 rounded-full mix-blend-hard-light" />
					</div>
					<h2 class="text-3xl typing">Hi There! I am Daniyaal.</h2>
					<p class="text-xl typing">A wanna be software engineer :D</p>
				</div>
			</section>
		</main>
		<!-- <Footer /> -->
		<TailwindIndicator />
		<DarkMode />
	</body>
</html>

<script>
	// This is all so gross, need to clean it up... Will defo not remember what is going on here lol
	const button = document.querySelector('button');
	const section = document.querySelector('section');
	const bgCover = document.querySelector('#background-cover') as HTMLElement
	const aboutText = document.querySelector('#about-text') as HTMLElement
	const cardReflection = document.querySelector('#card-reflection') as HTMLElement
	if (button) {
		button.addEventListener('click', () => {
			if (!section) return
			cardReflection.style.removeProperty('transition');
			cardReflection.style.setProperty('opacity', '0');
			cardReflection.style.setProperty('pointer-events', 'none');
			button.setAttribute('date-state', 'expanded-card');
			bgCover.style.setProperty('opacity', '1');
			setTimeout(function(){
				button.style.display = 'none';
				aboutText.setAttribute('date-state', 'expanded-card');
				const elements = document.getElementsByClassName("typing");
				// Each element should start typing after the next one has finished
				for (let i = 0; i < elements.length; i++) {
					const element = elements[i];
					const text = element.innerHTML;
					element.innerHTML = '';
					const type = (text: string, element: HTMLElement) => {
						if (text.length > 0) {
							element.innerHTML += text[0];
							setTimeout(() => {
								type(text.slice(1), element);
							}, 50);
						}
					}
					type(text, element as HTMLElement);
				}
				
			}, 1000); 
			// --x and --y to 0
			section.style.setProperty('--x', '0deg');
			section.style.setProperty('--y', '0deg')
			section.style.setProperty('transition', 'all 1s ease-out');
			section.style.setProperty('pointer-events', 'none');
			section.setAttribute('date-state', 'expanded-card');
		});
	}

	// on hover
	if (section && cardReflection) {
		section.addEventListener('mouseenter', () => {
			section.addEventListener('mousemove', (e) => {
			const { width, height } = section.getBoundingClientRect();
			const x = e.offsetX
			const y = e.offsetY

			const halfWidth = width / 2;
			const halfHeight = height / 2;

			const rY = ((x - halfWidth) / halfWidth) * 10;
			const rX = ((y - halfHeight) / halfHeight) * 10;

			// const hX
			// const hX = x - halfWidth
			// const hY = y - halfHeight

			const { width: cW, height: cH  } = cardReflection.getBoundingClientRect();

			section.style.setProperty("--x", `${rX}deg`);
			section.style.setProperty("--y", `${rY}deg`);
			section.style.setProperty("--hX", `${width - x - cW/2}px`);
			section.style.setProperty("--hY", `${height - y - cH/2}px`);
		});
		})
		// On mouse leave set x and y to 0
		section.addEventListener('mouseleave', () => {
			section.style.setProperty("--x", `0deg`);
			section.style.setProperty("--y", `0deg`);
			section.removeEventListener('mousemove', () => {});
			// section.style.setProperty("--hX", `0px`);
			// section.style.setProperty("--hY", `0px`);
		});
	}
</script>

<style is:global>
	@font-face {
		font-family: 'Biro Script Reduced';
		src: url('/fonts/BiroScriptReduced.otf') format('otf');
		font-weight: normal;
		font-style: normal;
		font-display: swap;
	}
</style>

<style>
	:root {
		--shadow-color: 40deg 20% 40%;
		--shadow-elevation-low:
			0px 0.4px 0.6px hsl(var(--shadow-color) / 0),
			0px 0.8px 1.2px hsl(var(--shadow-color) / 0.19),
			0px 1.6px 2.4px hsl(var(--shadow-color) / 0.39);
		--shadow-elevation-medium:
			0px 0.4px 0.6px hsl(var(--shadow-color) / 0),
			0px 1.9px 2.8px hsl(var(--shadow-color) / 0.15),
			0px 3.8px 5.7px hsl(var(--shadow-color) / 0.31),
			0px 7.8px 11.7px hsl(var(--shadow-color) / 0.46);
		--shadow-elevation-high:
			0px 0.4px 0.6px hsl(var(--shadow-color) / 0),
			0px 3.8px 5.7px hsl(var(--shadow-color) / 0.07),
			0px 6.7px 10.1px hsl(var(--shadow-color) / 0.14),
			0px 9.7px 14.6px hsl(var(--shadow-color) / 0.21),
			0px 13.5px 20.3px hsl(var(--shadow-color) / 0.28),
			0px 18.8px 28.2px hsl(var(--shadow-color) / 0.35),
			0px 26px 39px hsl(var(--shadow-color) / 0.43),
			0px 35.9px 53.9px hsl(var(--shadow-color) / 0.5);
	}
	section {
		top: calc(50% - 15rem);
		left: calc(50% - 10rem);
		right: calc(50% - 10rem);
		bottom: calc(50% - 15rem);
		/* width: 20rem;
		height: 30rem; */
		transition: transform 1s ease-in-out;
		box-shadow: var(--shadow-elevation-medium);
	}
	section[date-state="expanded-card"] {
		transform: translate(1rem, 1rem);
		top: 2rem;
		left: 2rem;
		right: 2rem;
		bottom: 2rem;
		/* width: calc(100% - 4rem);
		height: calc(100% - 4rem); */
		transform: none;
		border-radius: 0.4rem
	}

	/* #about-text {
		opacity: 0;
	} */

	#about-text[data-state="expanded-card"] {
		opacity: 1;
		animation-duration: 1s;
		animation-name: fadein;
		animation-fill-mode: forwards;
	}

	button {
		/* opacity: 1; */
		display: block;
	}
	button[date-state="expanded-card"] {
		opacity: 0;
		animation-duration: 0.4s;
  	animation-name: fadeout;
		animation-fill-mode: forwards;
	}

	@keyframes fadein {
		from { opacity: 0; }
		to   { opacity: 1; }
	}

	@keyframes fadeout {
		from {
			opacity: 1;
			transform: scale(1);
		}
		to { 
			transform: scale(0.9);
			opacity: 0;
			display: none;
		}
	}
</style>